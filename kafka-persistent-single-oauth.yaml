apiVersion: kafka.strimzi.io/v1beta1
kind: Kafka
metadata:
  name: my-cluster     
spec:
  kafka:
    version: 2.4.0
    replicas: 1
    listeners:
      plain: {}
      tls:
        authentication:
          type: oauth
          clientId: kafka
          clientSecret:
            key: secret
            secretName: broker-oauth-secret
          validIssuerUri: https://sso-sso.apps.dev.myocp.net/auth/realms/kafka-authz
          jwksEndpointUri: https://sso-sso.apps.dev.myocp.net/auth/realms/kafka-authz/protocol/openid-connect/certs
          userNameClaim: azp
          tlsTrustedCertificates:
          - secretName: ca-truststore
            certificate: ca.crt   
    authorization:
      type: keycloak
      tokenEndpointUri: https://sso-sso.apps.dev.myocp.net/auth/realms/kafka-authz/protocol/openid-connect/token
      clientId: kafka
      delegateToKafkaAcls: true
      disableTlsHostnameVerification: false 
      tlsTrustedCertificates:
      - secretName: ca-truststore
        certificate: ca.crt      
      superUsers:
      - User:service-account-kafka
    logging:
      type: inline
      loggers:
        log4j.logger.io.strimzi: "DEBUG"
    config:
      offsets.topic.replication.factor: 1
      transaction.state.log.replication.factor: 1
      transaction.state.log.min.isr: 1
      log.message.format.version: "2.4"
    storage:
      type: jbod
      volumes:
      - id: 0
        type: persistent-claim
        size: 100Gi
        deleteClaim: false
  zookeeper:
    replicas: 1
    storage:
      type: persistent-claim
      size: 100Gi
      deleteClaim: false
  entityOperator:
    topicOperator: {}
    userOperator: {}